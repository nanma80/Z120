# This file was *autogenerated* from the file solving3c.sage.
from sage.all_cmdline import *   # import sage library
_sage_const_2 = Integer(2); _sage_const_120 = Integer(120); _sage_const_0 = Integer(0); _sage_const_60 = Integer(60); _sage_const_132 = Integer(132); _sage_const_72 = Integer(72); _sage_const_1 = Integer(1)
import random

sage.misc.preparser.load(sage.misc.preparser.base64.b64decode("bWF0cml4XzJjLnB5"),globals(),False)
sage.misc.preparser.load(sage.misc.preparser.base64.b64decode("bWF0cml4XzNjLnB5"),globals(),False)

MS2C = MatrixSpace(GF(_sage_const_2 ), _sage_const_72 , _sage_const_120 )
Matrix2C = MS2C(matrix_2c)

MS3C = MatrixSpace(GF(_sage_const_2 ), _sage_const_60 , _sage_const_120 )
Matrix3C = MS3C(matrix_3c)

MS2C3C = MatrixSpace(GF(_sage_const_2 ), _sage_const_132 , _sage_const_120 )
Matrix2C3C = MS2C3C(matrix_2c + matrix_3c)

Move = VectorSpace(GF(_sage_const_2 ), _sage_const_120 )
State2C = VectorSpace(GF(_sage_const_2 ), _sage_const_72 )
State3C = VectorSpace(GF(_sage_const_2 ), _sage_const_60 )

initial_move = [_sage_const_0 ] * _sage_const_120 
initial_move[_sage_const_0 ] = _sage_const_1 

for i in range(_sage_const_120 ):
  if i > _sage_const_0 :
    moves = initial_move[:]
    # moves[i] = 1

    gf2_moves = Move(moves)

    scrambled_state = State3C(Matrix3C * gf2_moves)
    print list(scrambled_state).count(_sage_const_1 )
