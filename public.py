# This file was *autogenerated* from the file public.sage.
from sage.all_cmdline import *   # import sage library
_sage_const_2 = Integer(2); _sage_const_120 = Integer(120); _sage_const_0 = Integer(0); _sage_const_60 = Integer(60); _sage_const_132 = Integer(132); _sage_const_72 = Integer(72); _sage_const_1 = Integer(1)
import random

sage.misc.preparser.load(sage.misc.preparser.base64.b64decode("bWF0cml4XzJjLnB5"),globals(),False)
sage.misc.preparser.load(sage.misc.preparser.base64.b64decode("bWF0cml4XzNjLnB5"),globals(),False)

MS2C = MatrixSpace(GF(_sage_const_2 ), _sage_const_72 , _sage_const_120 )
Matrix2C = MS2C(matrix_2c)

MS3C = MatrixSpace(GF(_sage_const_2 ), _sage_const_60 , _sage_const_120 )
Matrix3C = MS3C(matrix_3c)

MS2C3C = MatrixSpace(GF(_sage_const_2 ), _sage_const_132 , _sage_const_120 )
Matrix2C3C = MS2C3C(matrix_2c + matrix_3c)

Move = VectorSpace(GF(_sage_const_2 ), _sage_const_120 )
State2C = VectorSpace(GF(_sage_const_2 ), _sage_const_72 )
State3C = VectorSpace(GF(_sage_const_2 ), _sage_const_60 )

original_moves = Move([random.randint(_sage_const_0 , _sage_const_1 ) for b in range(_sage_const_120 )])

scrambled_state = State3C(Matrix3C * original_moves)
solution = Matrix3C.solve_right(scrambled_state)
all_moves_that_solve_3c = solution + original_moves

state_2c_when_3c_solved = Matrix2C * all_moves_that_solve_3c
print 'Starting from a random scramble, when 3C are solved, the state of 2C orbit is: (zero means even permutation)'
print state_2c_when_3c_solved

print ''
print 'The 2C matrix is:'
print Matrix2C

print 'The rank of the 2C matrix is: ' + str(Matrix2C.rank())

print ''
print 'The row space of the 2C matrix is: '
print Matrix2C.row_space()

print ''
print 'The 3C matrix is:'
print Matrix3C

print 'The rank of the 3C matrix is: ' + str(Matrix3C.rank())

print ''
print 'The row space of the 3C matrix is: '
print Matrix3C.row_space()

print ''
print 'The 2C + 3C matrix is:'
print Matrix2C3C

print 'The rank of the 2C + 3C matrix is: ' + str(Matrix2C3C.rank())
